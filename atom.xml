<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ZM-Meribel.github.io</id>
    <title>梓孟——地萧阁一隅</title>
    <updated>2020-10-13T14:21:43.570Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ZM-Meribel.github.io"/>
    <link rel="self" href="https://ZM-Meribel.github.io/atom.xml"/>
    <subtitle>饮得明月映丝愁，唱叹人间四月天。</subtitle>
    <logo>https://ZM-Meribel.github.io/images/avatar.png</logo>
    <icon>https://ZM-Meribel.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 梓孟——地萧阁一隅</rights>
    <entry>
        <title type="html"><![CDATA[解题记录——魔法少女小Scarlet]]></title>
        <id>https://ZM-Meribel.github.io/post/1/</id>
        <link href="https://ZM-Meribel.github.io/post/1/">
        </link>
        <updated>2020-10-13T11:20:20.000Z</updated>
        <content type="html"><![CDATA[<pre><code>2020.10月 我重新复建算法，写题主要以低难度入门题为主。
以一击AC和效率切题为效率，并借此回忆一些编码特性。
</code></pre>
<h3 id="题目描述">题目描述</h3>
<p>Scarlet最近学会了一个数组魔法，她会在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n*n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>二维数组上将一个奇数阶方阵按照顺时针或者逆时针旋转90°，</p>
<p>首先，Scarlet会把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>的正整数按照从左往右，从上至下的顺序填入初始的二维数组中，然后她会施放一些简易的魔法。</p>
<p>Scarlet既不会什么分块特技，也不会什么Splay套Splay，她现在提供给你她的魔法执行顺序，想让你来告诉她魔法按次执行完毕后的二维数组。</p>
<h3 id="输入格式">输入格式</h3>
<p>第一行两个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，表示方阵大小和魔法施放次数。</p>
<p>接下来<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>行，每行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>，表示在这次魔法中，Scarlet会把以第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>行第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>列为中心的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>阶矩阵按照某种时针方向旋转，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>表示顺时针，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>表示逆时针。</p>
<h3 id="输出格式">输出格式</h3>
<p>输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>行，每行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个用空格隔开的数，表示最终所得的矩阵</p>
<h3 id="输入输出样例">输入输出样例</h3>
<p><strong>输入 # 1</strong></p>
<pre><code>5 4
2 2 1 0
3 3 1 1
4 4 1 0
3 3 2 1
</code></pre>
<p><strong>输出 # 1</strong></p>
<pre><code>5 10 3 18 15
4 19 8 17 20
1 14 23 24 25
6 9 2 7 22
11 12 13 16 21
</code></pre>
<h3 id="说明提示"><em>说明/提示</em></h3>
<p>对于50%的数据，满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>对于100%的数据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>&lt;</mo><mo>=</mo><mn>500</mn></mrow><annotation encoding="application/x-tex">1&lt;=n,m&lt;=500</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>x</mi><mo>−</mo><mi>r</mi><mo>&lt;</mo><mo>=</mo><mi>x</mi><mo>+</mo><mi>r</mi><mo>&lt;</mo><mo>=</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>y</mi><mo>−</mo><mi>r</mi><mo>&lt;</mo><mo>=</mo><mi>y</mi><mo>+</mo><mi>r</mi><mo>&lt;</mo><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1&lt;=x-r&lt;=x+r&lt;=n,1&lt;=y-r&lt;=y+r&lt;=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p>
<h2 id="解题报告">解题报告</h2>
<p>本题是一道模拟裸体，同时也是洛谷月赛的T1，相对较水，数据范围友好。但是考验数学几何思维想象功底，以题主的写法，写了42行代码，并且顺时针和逆时针分开写，很明显，不小的代码量增大了细节错误的可能性，在一定程度上考验了Coder的码字稳定性。</p>
<p>思路上，核心函数revolve的思路就是顺时针逆时针分开if，if内分环数处理（先处理第一环（最里面那一环），在处理第二环。。。），环内利用交换变量t，先旋转四个角（类比于魔方中的角块），再旋转四个边（类比魔方中的棱块）。</p>
<h2 id="ac代码">AC代码</h2>
<pre><code>#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;

int n, m, a[520][520];

void revolve(int x, int y, int r, int z)
{
    if (r &lt;= 0)
        return;
    int t, tt[2000];
    if (z == 0)
    {
        for (int i = 1; i &lt;= r; i++)
        {
            t = a[x - i][y - i];
            a[x - i][y - i] = a[x + i][y - i];
            a[x + i][y - i] = a[x + i][y + i];
            a[x + i][y + i] = a[x - i][y + i];
            a[x - i][y + i] = t;
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                tt[j] = a[x - i][y - i + j];
                a[x - i][y - i + j] = a[x + i - j][y - i];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x + i - j][y - i] = a[x + i][y + i - j];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x + i][y + i - j] = a[x - i + j][y + i];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x - i + j][y + i] = tt[j];
            }
        }
    }
    else
    {
        for (int i = 1; i &lt;= r; i++)
        {
            t = a[x - i][y - i];
            a[x - i][y - i] = a[x - i][y + i];
            a[x - i][y + i] = a[x + i][y + i];
            a[x + i][y + i] = a[x + i][y - i];
            a[x + i][y - i] = t;
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                tt[j] = a[x - i][y - i + j];
                a[x - i][y - i + j] = a[x - i + j][y + i];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x - i + j][y + i] = a[x + i][y + i - j];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x + i][y + i - j] = a[x + i - j][y - i];
            }
            for (int j = 1; j &lt;= 2 * i - 1; j++)
            {
                a[x + i - j][y - i] = tt[j];
            }
        }
    }

    return;
}

int main()
{
    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);
    for (int i = 1; i &lt;= n; i++)
    {
        for (int j = 1; j &lt;= n; j++)
        {
            a[i][j] = (i - 1) * n + j;
            //printf(&quot;%d &quot;,a[i][j]);
        }
    }
    int x, y, r, z;
    for (int i = 1; i &lt;= m; i++)
    {
        scanf(&quot;%d%d%d%d&quot;, &amp;x, &amp;y, &amp;r, &amp;z);
        revolve(x, y, r, z);
    }
    for (int i = 1; i &lt;= n; i++)
    {
        for (int j = 1; j &lt; n; j++)
        {
            printf(&quot;%d &quot;, a[i][j]);
        }
        printf(&quot;%d\n&quot;, a[i][n]);
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[忏悔录——关于20201001联动的反思【已收录至B站选送】]]></title>
        <id>https://ZM-Meribel.github.io/post/Confession for  linkage action in 10.1/</id>
        <link href="https://ZM-Meribel.github.io/post/Confession for  linkage action in 10.1/">
        </link>
        <updated>2020-10-05T06:22:44.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>关于这次联动，从开始进行时，其实我就有一种很强的挫败感了。历来高要求的我实在无法轻易接受这样的结果。所谓“Was mich nicht umbringt, macht mich strker.”（来自《偶像的黄昏》尼采·著），故详写此文，警以自戒。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>关于这次联动，从开始进行时，其实我就有一种很强的挫败感了。历来高要求的我实在无法轻易接受这样的结果。所谓“Was mich nicht umbringt, macht mich strker.”（来自《偶像的黄昏》尼采·著），故详写此文，警以自戒。</p>
<!-- more -->
<h1 id="过程">过程</h1>
<h2 id="联动前企划">联动前企划</h2>
<p>最早提出这个联动的是“钠镓Official” 的后勤，他认为我们底层V应该学习大箱的经验，利用联动的方式集中流量，相互补血，达到1+1&gt;2的效应（然而后面因为预先准备不足和不设主场地的设计，这一效果被削弱了，这是后话）。</p>
<p>如果仅限于两三个人，联动确实相对还算简单，预先的准备主要也是设备上的彩排和一个美宣上的合作（甚至可以没有 ），但是当涉及到6,7人，乃至数十人（目前最典型的就是京华主持的Vtuber春晚），那需要的准备就是呈指数级上涨了。</p>
<p>首先要解决的就是人员调度问题，在企划初计划参与的人数为MC7个，歌回8个（与现在相差无异）；在时间安排上考虑到不少人为学生党，所以选择在了大家都能播且流量复苏的中秋当天（学期期间对流量的打击确实很大，从数据上是清晰可见的）；当然这一选择要面临一个巨大的问题就是——撞车。因为担心发力点歌回与大箱社内联动的时间冲突导致的损失，我们将歌回时间放在了较迟的10:00,，但是出乎我们意料的是，中秋当晚各个大箱（VR，P-SP，Holo-cn等）均没有联动活动，唯一的B站官方的活动也是主题杂谈接力，让我们算是喘了一口气。</p>
<p>其次就是游戏的选择，当时主要考虑的是两点：1.是否过于硬核导致实力差距过大 2.是否廉价保证所有成员都能游玩。这两点直接排除了不少游戏，如诸多FPS均被排除在外，雪山狼人杀也因为价格不菲不能保证所有成员拥有被排除。最后选择了大家都能看得懂，并且有盗版资源，方便自定义的MC（Minecraft）作为联动的游戏项目，内容也选择了强调互动合作的起床战争（可惜还是太硬核导致MC专精玩家钠镓杀疯了）</p>
<p>在歌回上，为了发挥联动的优势，选择了独唱接力与合唱相结合的方式。合唱曲目则选择了难度不高并且开放全种类非商业二创的《千里邀月》，最后东拼西凑总算凑齐了4个人合唱。</p>
<p>##技术需求</p>
<p>事实上，这次联动失败的很大原因在于对技术需求认识的不充分，后勤人员的缺少和技术准备太迟。</p>
<p>实际上，首先事前的宣传，我们需要一名专业美工，并且这位美工需要承担巨大的工作量，其中包括：<br>
动态宣传图，动态成员宣传名片，直播间封面，统一的Logo，宣传PV，直播间OPED（如有主会场），转场画面，fanart（如有需要），以及布置直播间所需要的各种美术资源。而在前期，这些工作大部分由美工经验一般的“芥川总司”负责，并且也没有提前分析出所需的部分美术内容，在直播前一天，我和U盘“U盘_channel”合作赶工了一部分，但还是遗憾没有全部完成。</p>
<p>除此之外，还需要一位功底深厚的文案撰写文宣，一个有故事又吸引人的文宣能够很大程度上充实宣传内容，可惜我们这次并没有找到这样的大神，而是由我接手了文宣，最后也只能写干巴巴的官话，非常不满意。</p>
<p>还有就是动态发布的时间，一般PV以两天前为宜，一天前发布成员预告和长图，早上发布全AT宣传。接下来就是按倒计时发布名片（可忽略）以及直播前30mins提醒待机。实际上，联动前中之人和技术负责往往都是忙不开交，这就需要专人帮忙发布，然而事实上当天并没有这样的人，也导致了我没有按计划以倒计时的形式发布名片。</p>
<p>游戏中需要的要素，就是：解说，腐竹，语音调度 。这至少牵扯到了三个人，两款软件。事实上，我们最后并没有找解说（因为没有主会场），腐竹方面要郑重感谢@CoCo_Channel 的大力支持，能够在帮忙之中为我们提供服务器还能满足钠镓的各种要求。然而非常重要的语音调度上却缺位一人，好在利用YY的分房间机制解决。</p>
<p><strong>值得一提的是，语音软件的选择一度成为了我们的重大难题</strong>目前市面上可以选择的专业软件有YY，ts3，discord，开黑啦。然而ts3背景输入和麦克风输入混在一条轴上（后面想到可以由专人放歌解决）导致混响没法加上，discord部分成员无法安装（？？？），开黑啦没有混响工具并且延迟巨高。最后不得已选择了YY，但是YY的音质一言难尽。。。。。。。</p>
<h2 id="人员调度">人员调度</h2>
<p>这次的人员调度也出现了很大问题。因为是一群不认识的个人势，所以平常很难有共同在线的时间，一些需要共同讨论的问题无法解决，除此之外部分人响应速度确实太慢。总结来说，这次联动中人员的调度严重表明了个人势有后勤运营助理并且就联动在事前频繁开展大开会的重要性（事实上，这次联动我们没有安排开会，这是巨大的失误）。</p>
<h2 id="演出效果">演出效果</h2>
<p>这次联动的演出效果可以说是奇差。由于本人兼职MC（主持），YY调度和主播，根本无暇处理OBS的导播问题，也没有事前彩排做导播上的准备 ，其结果就是各种导播操作的不及时，肉眼可见的放送事故。还有的问题就是没有彩排走流程，部分环节生疏乃至停下来，比如起床战争服务器重启期间就应该安排杂谈并且做OBS上的场景切换。MC（主持）没有提前彩排，准备台词本也是一个问题，导致歌回中间衔接生硬，于京华的V春晚一对比，身为MC的我自愧难当。</p>
<h2 id="合唱准备">合唱准备</h2>
<p>这次合唱考虑到语言软件的延迟问题，我们没有采取实时合唱，而是预录制，然而，所有人的干声母带只在联动前一天取得，更糟糕的是，我们没有混音师（后来感谢我的一位未出道好友的倾情支援），只能对着AU推子推一下压一起。因为混音很迟才处理，也没有相应的视觉效果和打轴，而是直接将原MV视频轨提取来和合唱内容封装。</p>
<h1 id="结语">结语</h1>
<p>这次联动可以说是我倾尽心血之作，我参与了美宣，文宣，部分混音，视频封装，MC和出演等工作，也正因此，这次联动的诸多瑕疵让我心疼，故谨写此文，自戒。</p>
<h2 id="给其他个人势组织大型联动的建议">给其他个人势组织大型联动的建议</h2>
<p>**首先是人！！！**参与联动的都不能是死人，要么中之人要么工具人总有一个要保持一天有至少3h的可回应时间并且有电脑在身边。活动要提前一个月甚至更早就开始准备各项内容的实体，如：美宣内容，文宣文本。诸如PV之类的则要更早约稿，并且一旦有一个内容开始制作，就要保持每个星期一次大开会的状态。<br>
同时一定要分配好主MC和副MC的角色。歌回一定要有专人负责语音软件调度。设置主会场的一定要有专人负责转场！！！！</p>
]]></content>
    </entry>
</feed>